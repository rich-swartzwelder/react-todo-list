{"version":3,"sources":["Components/header.js","Components/badge.js","Components/bottomNav.js","Components/todoInput.js","Components/modal.js","Components/checkBox.js","Components/editInput.js","Components/todo.js","Components/todos.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","Fragment","dist","id","className","width","py","pl","pr","justifyContent","alignItems","fontSize","fontWeight","io","onClick","this","props","toggleModal","Component","BtnBadge","number","BottomNav","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleRadioClick","activeButton","todos","setState","showTodos","state","_this2","active","Components_badge","activeTodosNum","completeTodosNum","TodoInput","todoRef","React","createRef","autoFocus","type","value","newTodo","onChange","placeholder","InputModal","renderError","errorMsg","length","color","Modal","show","onHide","closeButton","Title","Body","onSubmit","Components_todoInput","Footer","bg","ml","Checkbox","handleCheckTodo","onToggleCheck","todoId","complete","md","size","EditInput","handleSubmitEdit","event","preventDefault","handleEditTodo","defaultValue","defValue","Todo","handleEditToggle","isEditing","onEdit","isValid","pb","px","mr","checkBox","Components_editInput","todoTitle","onDeleteTodo","Todos","renderActiveTodos","activeTodos","allTodos","filter","todo","showActive","map","src_Components_todo","key","title","renderCompleteTodos","completeTodos","showComplete","window","scrollTo","App","generateNewId","currentId","handleToggleModal","modal","handleResetState","validateTodo","tempValidate","handleEnterTodo","e","target","handleSubmitTodo","toConsumableArray","concat","objectSpread","handleDeleteTodo","tempTodos","handleShowTodos","intervalId","allTodosNum","my","flexDirection","Components_header","Components_todos","Components_bottomNav","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cca679b8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Flex, Text } from \"rebass\";\nimport { IoIosAdd } from \"react-icons/io\";\nimport \"./header.css\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Flex\n          id=\"header\"\n          className=\"headerContainer\"\n          width={1}\n          py={24}\n          pl={20}\n          pr={18}\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Text className=\"title\" fontSize={36} fontWeight=\"300\">\n            Things To Do\n          </Text>\n          <IoIosAdd\n            className=\"addButton\"\n            fontSize={42}\n            onClick={this.props.toggleModal}\n          />\n        </Flex>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { Flex, Text } from \"rebass\";\nimport \"./badge.css\";\n\nclass BtnBadge extends Component {\n  render() {\n    return (\n      <Flex className=\"bdg\" justifyContent=\"center\" alignItems=\"center\">\n        <Text className=\"bdgNumber\">{this.props.number}</Text>\n      </Flex>\n    );\n  }\n}\n\nexport default BtnBadge;\n","import React, { Component } from \"react\";\nimport { Flex, Box, Text } from \"rebass\";\nimport BtnBadge from \"./badge\";\nimport \"./bottomNav.css\";\n\nclass BottomNav extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeButton: 1\n    };\n  }\n\n  handleRadioClick = (activeButton, todos) => {\n    this.setState({ activeButton });\n    this.props.showTodos(todos);\n  };\n\n  render() {\n    return (\n      <Flex width={1} className=\"navContainer\">\n        <Flex\n          className=\"button btn1\"\n          width={1 / 3}\n          onClick={() => this.handleRadioClick(1, \"all\")}\n          active={this.state.activeButton === 1}\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Box>\n            <Text className=\"buttonName\">All</Text>\n          </Box>\n          <Flex className=\"btnBadge\">\n            <BtnBadge number={this.props.activeTodosNum} />\n          </Flex>\n        </Flex>\n\n        <Flex\n          className=\"button btn2\"\n          width={1 / 3}\n          onClick={() => this.handleRadioClick(2, \"active\")}\n          active={this.state.activeButton === 2}\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Box>\n            <Text className=\"buttonName\">Active</Text>\n          </Box>\n          <Flex className=\"btnBadge\">\n            <BtnBadge number={this.props.activeTodosNum} />\n          </Flex>\n        </Flex>\n\n        <Flex\n          className=\"button btn3\"\n          width={1 / 3}\n          onClick={() => this.handleRadioClick(3, \"complete\")}\n          active={this.state.activeButton === 3}\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <span className=\"buttonName\">Complete</span>\n          <BtnBadge number={this.props.completeTodosNum} />\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BottomNav;\n","import React, { Component } from \"react\";\n// import { FormGroup, FormControl } from \"react-bootstrap\";\nimport { Flex } from \"rebass\";\nimport \"./todoInput.css\";\n\nclass TodoInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.todoRef = React.createRef();\n  }\n\n  render() {\n    return (\n      <div>\n        <Flex>\n          <input\n            className=\"todoTextField\"\n            autoFocus\n            type=\"text\"\n            value={this.props.newTodo}\n            onChange={this.props.onChange}\n            placeholder=\"What do you need to do?\"\n          />\n        </Flex>\n      </div>\n    );\n  }\n}\n\nexport default TodoInput;\n","import React, { Component } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Button, Text } from \"rebass\";\nimport TodoInput from \"./todoInput\";\n\nclass InputModal extends Component {\n  renderError = () => {\n    let error;\n    if (this.props.errorMsg.length > 0) {\n      error = (\n        <Text color=\"red\" fontWeight=\"600\" fontSize={2}>\n          {this.props.errorMsg}\n        </Text>\n      );\n    } else {\n      error = null;\n    }\n    return error;\n  };\n\n  render() {\n    return (\n      <Modal show={this.props.show} onHide={this.props.toggleModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>New todo</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <form onSubmit={this.props.onSubmit}>\n            <TodoInput\n              onChange={this.props.onChange}\n              newTodo={this.props.newTodo}\n            />\n          </form>\n          {this.renderError()}\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button bg=\"#a9a9a9\" onClick={this.props.toggleModal}>\n            Cancel\n          </Button>\n          <Button bg=\"#0088cc\" ml={2} onClick={this.props.onSubmit}>\n            Add\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default InputModal;\n","import React, { Component } from \"react\";\nimport { MdCheckBox, MdCheckBoxOutlineBlank } from \"react-icons/md\";\n\nclass Checkbox extends Component {\n  handleCheckTodo = () => {\n    this.props.onToggleCheck(this.props.todoId);\n  };\n\n  render() {\n    return this.props.complete ? (\n      <MdCheckBox size=\"32\" onClick={this.handleCheckTodo} />\n    ) : (\n      <MdCheckBoxOutlineBlank size=\"32\" onClick={this.handleCheckTodo} />\n    );\n  }\n}\n\nexport default Checkbox;\n","import React, { Component } from \"react\";\nimport { Flex } from \"rebass\";\nimport \"./editInput.css\";\n\nclass EditInput extends Component {\n  handleSubmitEdit = event => {\n    event.preventDefault();\n    this.props.handleEditTodo(this.props.todoId);\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmitEdit} className=\"editForm\">\n          <Flex alignItems=\"center\">\n            <input\n              className=\"editTextField\"\n              autoFocus\n              // ref={this.editRef}\n              type=\"text\"\n              defaultValue={this.props.defValue}\n              onChange={this.props.onChange}\n            />\n            <span className=\"saveButton\" onClick={this.handleSubmitEdit}>\n              Save\n            </span>\n          </Flex>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default EditInput;\n","import React, { Component } from \"react\";\nimport Checkbox from \"./checkBox\";\nimport EditInput from \"./editInput\";\nimport { MdEdit, MdDelete } from \"react-icons/md\";\nimport { Flex, Box } from \"rebass\";\n\nimport \"./todo.css\";\n\nclass Todo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isEditing: false,\n      isValid: true\n    };\n  }\n\n  handleEditToggle = () => {\n    this.setState({ isEditing: !this.state.isEditing });\n  };\n\n  handleEditTodo = id => {\n    this.props.onEdit(id);\n    this.handleEditToggle(id);\n  };\n\n  render() {\n    return (\n      <div className=\"item\">\n        <Flex alignItems=\"center\" width={1} pb={1} px={3}>\n          <Box width={1 / 16} alignItems=\"center\" mr={3}>\n            <Checkbox\n              className=\"checkBox\"\n              complete={this.props.complete}\n              onToggleCheck={this.props.onToggleCheck}\n              todoId={this.props.todoId}\n            />\n          </Box>\n          <Box width={11 / 16} className=\"todoTitle\" alignItems=\"center\">\n            {this.state.isEditing ? (\n              <EditInput\n                defValue={this.props.todoTitle}\n                onChange={this.props.onChange}\n                handleEditTodo={this.handleEditTodo}\n                todoId={this.props.todoId}\n              />\n            ) : (\n              this.props.todoTitle\n            )}\n          </Box>\n          <Flex width={4 / 16} justifyContent=\"flex-end\" className=\"icons\">\n            <Box>\n              <MdEdit\n                size=\"32\"\n                className=\"editIcon\"\n                onClick={() => this.handleEditToggle(this.props.todoId)}\n              />\n              <MdDelete\n                size=\"32\"\n                className=\"deleteIcon\"\n                onClick={() => this.props.onDeleteTodo(this.props.todoId)}\n              />\n            </Box>\n          </Flex>\n        </Flex>\n      </div>\n    );\n  }\n}\n\nexport default Todo;\n","import React, { Component } from \"react\";\nimport Todo from \"./todo\";\nimport \"./todos.css\";\n\nclass Todos extends Component {\n  componentDidUpdate() {\n    window.scrollTo(0, 0);\n  }\n\n  renderActiveTodos = () => {\n    let activeTodos = this.props.allTodos.filter(todo => !todo.complete);\n    if (this.props.showActive) {\n      return activeTodos.map(todo => {\n        return (\n          <Todo\n            key={todo.id}\n            todoTitle={todo.title}\n            todoId={todo.id}\n            complete={todo.complete}\n            onToggleCheck={this.props.onToggleCheck}\n            onDeleteTodo={this.props.onDeleteTodo}\n            onEdit={this.props.onEdit}\n            onChange={this.props.onChange}\n            errorMsg={this.props.errorMsg}\n          />\n        );\n      });\n    } else {\n      return null;\n    }\n  };\n\n  renderCompleteTodos = () => {\n    let completeTodos = this.props.allTodos.filter(todo => todo.complete);\n    if (this.props.showComplete) {\n      return completeTodos.map(todo => {\n        return (\n          <Todo\n            key={todo.id}\n            todoTitle={todo.title}\n            todoId={todo.id}\n            complete={todo.complete}\n            onToggleCheck={this.props.onToggleCheck}\n            onDeleteTodo={this.props.onDeleteTodo}\n            onEdit={this.props.onEdit}\n          />\n        );\n      });\n    } else {\n      return null;\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"columnReverse\">\n          {this.renderCompleteTodos()}\n          {this.renderActiveTodos()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Todos;\n","import React, { Component } from \"react\";\nimport { Flex } from \"rebass\";\nimport Header from \"./Components/header\";\nimport BottomNav from \"./Components/bottomNav\";\nimport InputModal from \"./Components/modal\";\nimport Todos from \"./Components/todos\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      newTodo: \"\",\n      allTodos: [],\n      currentId: 0,\n      errorMsg: \"\",\n      showActive: true,\n      showComplete: true,\n      intervalId: 0\n    };\n  }\n\n  generateNewId = () => {\n    this.setState({ currentId: this.state.currentId + 1 });\n  };\n\n  handleToggleModal = () => {\n    this.setState({ modal: !this.state.modal });\n    this.handleResetState();\n  };\n\n  validateTodo = () => {\n    let errorMsg;\n    let tempValidate = this.state.newTodo;\n    if (tempValidate.length === 0) {\n      errorMsg = \"Error: This field cannot be empty.\";\n      this.setState({ errorMsg });\n      return false;\n    } else {\n      errorMsg = \"\";\n      this.setState({ errorMsg });\n      tempValidate = \"\";\n      return true;\n    }\n  };\n\n  handleEnterTodo = e => {\n    this.setState({ newTodo: e.target.value });\n  };\n\n  handleSubmitTodo = e => {\n    e.preventDefault();\n\n    const isValid = this.validateTodo();\n\n    if (isValid) {\n      this.setState({\n        allTodos: [\n          ...this.state.allTodos,\n          {\n            title: this.state.newTodo,\n            id: this.state.currentId,\n            complete: false\n          }\n        ]\n      });\n\n      this.setState({ newTodo: \"\" });\n      this.generateNewId();\n      this.handleToggleModal();\n    }\n  };\n\n  handleCheckTodo = id => {\n    this.setState({\n      allTodos: this.state.allTodos.map(todo => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            complete: !todo.complete\n          };\n        } else {\n          return todo;\n        }\n      })\n    });\n  };\n\n  handleSubmitEdit = id => {\n    const isValid = this.validateTodo();\n\n    if (isValid) {\n      this.setState({\n        allTodos: this.state.allTodos.map(todo => {\n          if (todo.id === id) {\n            return {\n              ...todo,\n              title: this.state.newTodo\n            };\n          } else {\n            return todo;\n          }\n        })\n      });\n      this.setState({ newTodo: \"\" });\n    }\n  };\n\n  handleDeleteTodo = todo => {\n    let tempTodos = this.state.allTodos.filter(e => e.id !== todo);\n\n    this.setState({\n      allTodos: [...tempTodos]\n    });\n  };\n\n  handleResetState = () => {\n    let errorMsg = \"\";\n    this.setState({ errorMsg });\n    this.setState({ newTodo: \"\" });\n  };\n\n  handleShowTodos = todos => {\n    if (todos === \"all\") {\n      this.setState({ showActive: true });\n      this.setState({ showComplete: true });\n    }\n\n    if (todos === \"active\") {\n      this.setState({ showActive: true });\n      this.setState({ showComplete: false });\n    }\n\n    if (todos === \"complete\") {\n      this.setState({ showActive: false });\n      this.setState({ showComplete: true });\n    }\n  };\n\n  render() {\n    let allTodosNum = this.state.allTodos.length;\n    let activeTodosNum = this.state.allTodos.filter(todo => !todo.complete)\n      .length;\n    let completeTodosNum = this.state.allTodos.filter(todo => todo.complete)\n      .length;\n\n    return (\n      <div className=\"App\">\n        <Flex width={1} className=\"main\" justifyContent=\"center\">\n          <Flex\n            width={[1, 1, 1 / 2, 1 / 3]}\n            my={[0, 0, 70]}\n            flexDirection=\"column\"\n            className=\"innerContainer\"\n          >\n            <Header\n              className=\"header\"\n              toggleModal={this.handleToggleModal}\n              show={this.state.modal}\n              onChange={this.handleEnterTodo}\n              newTodo={this.state.newTodo}\n              onSubmit={this.handleSubmitTodo}\n              errorMsg={this.state.errorMsg}\n            />\n\n            <InputModal\n              show={this.state.modal}\n              onChange={this.handleEnterTodo}\n              newTodo={this.state.newTodo}\n              onSubmit={this.handleSubmitTodo}\n              toggleModal={this.handleToggleModal}\n              errorMsg={this.state.errorMsg}\n            />\n\n            <div className=\"todoContainer\">\n              <Todos\n                id=\"todos\"\n                allTodos={this.state.allTodos}\n                onToggleCheck={this.handleCheckTodo}\n                onDeleteTodo={this.handleDeleteTodo}\n                onChange={this.handleEnterTodo}\n                onEdit={this.handleSubmitEdit}\n                errorMsg={this.state.errorMsg}\n                showActive={this.state.showActive}\n                showComplete={this.state.showComplete}\n              />\n            </div>\n            <BottomNav\n              className=\"footer\"\n              allTodosNum={allTodosNum}\n              activeTodosNum={activeTodosNum}\n              completeTodosNum={completeTodosNum}\n              showTodos={this.handleShowTodos}\n            />\n          </Flex>\n        </Flex>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}